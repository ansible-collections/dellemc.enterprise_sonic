#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_l3_interfaces
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
}

DOCUMENTATION = """
---
module: sonic_l3_interfaces
version_added: "1.0.0"
short_description: Configure Layer 3 interface settings on Enterprise SONiC Distribution by Dell Technologies.
description:
  - This module provides configuration management of IPv4 and IPv6 parameters
    on Ethernet interfaces of devices running Enterprise SONiC Distribution by Dell Technologies
author: "Kumaraguru Narayanan (@nkumaraguru)"
notes:
  - Tested against Enterprise SONiC, release 3.0.2.
options:
  config:
    description: A list of l3_interfaces configurations.
    type: list
    elements: dict
    suboptions:
      name:
        required: True
        type: str
        description:
        - Full name of the interface, i.e. Ethernet1.
      ipv4:
        description:
        - List of IPv4 addresses to be set for the Layer 3 interface mentioned in name option.
        type: list
        elements: dict
        suboptions:
          address:
            description:
            - IPv4 address to be set in the format <ipv4 address>/<mask>
              for example, 192.0.2.1/24.
            type: str
      ipv6:
        description:
        - List of IPv6 addresses to be set for the Layer 3 interface mentioned in name option.
        type: list
        elements: dict
        suboptions:
          address:
            description:
              - IPv6 address to be set in the address format is <ipv6 address>/<mask>
                for example, 2001:db8:2201:1::1/64.
            type: str
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - deleted
    default: merged
"""
EXAMPLES = """
# Using deleted

# Before state:
# -------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#     "Ethernet112|5.1.1.1/16": {},
#     "Ethernet112|6.1.1.1/16": {},
#     "Ethernet112|3333::1/64": {},
#     "Ethernet112|4444::1/64": {},
#     ...
#   },
#  ...
#}

- name: Delete l3 interfaces
  sonic_l3_interfaces:
    config:
      - name: Ethernet112
        ipv4:
        - address: 6.1.1.1/16
        ipv6:
        - address: 4444::1/16
    state: deleted

# After state:
# ------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#     "Ethernet112|5.1.1.1/16": {},
#     "Ethernet112|3333::1/64": {},
#     ...
#   },
#  ...
#}


# Using deleted

# Before state:
# -------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#     "Ethernet112|5.1.1.1/16": {},
#     "Ethernet112|6.1.1.1/16": {},
#     "Ethernet112|3333::1/64": {},
#     "Ethernet112|4444::1/64": {},
#     ...
#   },
#  ...
#}

- name: Delete all l3 interfaces
  sonic_l3_interfaces:
    config:
    state: deleted

# After state:
# ------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#   },
#  ...
#}


# Using merged

# Before state:
# -------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#     "Ethernet112|5.1.1.1/16": {},
#     "Ethernet112|6.1.1.1/16": {},
#     "Ethernet112|3333::1/64": {},
#     "Ethernet112|4444::1/64": {},
#     ...
#   },
#  ...
#}

- name: Add one l3 interface
  sonic_l3_interfaces:
    config:
      - name: Ethernet112
        ipv4:
        - address: 7.1.1.1/16
        ipv6:
        - address: 5555::1/16
    state: merged

# After state:
# ------------
#
#show runningconfiguration all
#{
#  ...
#  "INTERFACE": {
#     ...
#     "Ethernet112|5.1.1.1/16": {},
#     "Ethernet112|6.1.1.1/16": {},
#     "Ethernet112|7.1.1.1/16": {},
#     "Ethernet112|3333::1/64": {},
#     "Ethernet112|4444::1/64": {},
#     "Ethernet112|5555::1/64": {},
#     ...
#   },
#  ...
#}


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.argspec.l3_interfaces.l3_interfaces import L3_interfacesArgs
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.config.l3_interfaces.l3_interfaces import L3_interfaces


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=L3_interfacesArgs.argument_spec,
                           supports_check_mode=True)

    result = L3_interfaces(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
