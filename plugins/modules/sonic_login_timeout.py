#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_login_timeout
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: sonic_login_timeout
version_added: '2.5.0'
short_description: Manage Global Login Timeout configurations on SONiC
description:
  - This module provides configuration management of login timeout parameter.
  - Login timeout feature is to terminate the inactive user sessions if the
    user sessions are left idle for more than the configured session timeout.
author: 'Arul Kumar Shankara Narayanan(@arulkumar9690)'
options:
  config:
    description: The set of login timeout attribute configurations
    type: dict
    suboptions:
      exec_timeout:
        description:
          -  CLI session timeout value.
          -  The range is from 0 to 3600
        type: int
  state:
    description:
      - Specifies the operation to be performed on the login timeout configured on the device.
      - If the state is "merged", merge specified attributes with existing configured login attribute.
      - For "deleted", delete the specified login attributes from the existing configuration.
      - For "overridden", Overrides on-device login timeout configurations with the provided configuration.
      - For "replaced", Replaces on-device login timeout configurations with the provided configuration.
    type: str
    choices:
      - merged
      - deleted
      - overridden
      - replaced
    default: merged
"""
EXAMPLES = """
# Using deleted
#
# Before State:
# -------------
#
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 10
# !

  - name: Delete Login Timeout configurations
    dellemc.enterprise_sonic.sonic_login_timeout:
      config:
        exec_timeout : 10
      state: deleted

# After State:
# ------------
# sonic# show running-configuration | grep exec-timeout
# sonic#


# Using Merged
#
# Before State:
# -------------
#
# sonic# show running-configuration | grep exec-timeout
# sonic#

  - name: Modify Login Timeout configurations
    dellemc.enterprise_sonic.sonic_login_timeout:
      config:
              exec_timeout : 15
      state: merged

# After State:
# ------------
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 15
# !


# Using overridden
#
# Before State:
# -------------
#
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 10
# !
# sonic#

  - name: Modify Login Timeout configurations
    dellemc.enterprise_sonic.sonic_login_lockout:
      config:
              exec_timeout : 20
      state: overridden

# After State:
# ------------
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 20
# !


# Using replaced
#
# Before State:
# -------------
#
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 10
# !
# sonic#

  - name: Modify Login Timeout configurations
    dellemc.enterprise_sonic.sonic_login_timeout:
      config:
              exec_timeout: 15
      state: replaced

# After State:
# ------------
# sonic# show running-configuration | grep exec-timeout
# !
# login exec-timeout 15
# !


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.argspec.login_timeout.login_timeout import Login_timeoutArgs
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.config.login_timeout.login_timeout import Login_timeout


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Login_timeoutArgs.argument_spec,
                           supports_check_mode=True)

    result = Login_timeout(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
