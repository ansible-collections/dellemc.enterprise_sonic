#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_ospf_area"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

DOCUMENTATION = """
---
module: sonic_ospf_area
description: This module provides configuration for the area settings of OSPF running on SONiC switches
version_added: "2.5.0"
short_description: configure OSPF area settings on SONiC
author: "Xiao Han (@Xiao_Han2)"
options:
  config:
    description:
      - Specifies configuration for OSPFv2 areas
    type: list
    elements: dict
    suboptions:
      area_id:
        type: str
        required: True
        description:
          - Area ID of the network (A.B.C.D or 0 to 4294967295).
      vrf_name:
        type: str
        required: True
        description: name of the vrf this area belongs to
      authentication_type:
        type: str
        choices:
          - message_digest
          - text
        description: authentication type for area
      default_cost:
        description: Configure NSSA or stub area summary default cost
        type: int
      filter_list_in:
        type: str
        description:
          - inter area prefix filter list.
          - Filter incoming prefixes into the area.
          - expects name of a prefix list.
      filter_list_out:
        type: str
        description:
          - inter area prefix filter list.
          - Filter outgoing prefixes from the area.
          - expects name of a prefix list.
      networks:
        type: list
        elements: str
      ranges:
        type: list
        elements: dict
        description: Configure address range summarization on border routers
        suboptions:
          prefix:
            type: str
            required: True
            description: address range prefix
          advertise:
            type: bool
            description: enable address range advertising
          cost:
            type: int
            description: configure cost of address range
          substitute:
            type: str
            description: Configure substitute prefix for the address range
      shortcut:
        type: str
        choices:
          - default
          - disable
          - enable
        description: Configure area's shortcut mode
      stub:
        type: dict
        description: configuration for stub type area
        suboptions:
          enabled:
            type: bool
            description: configure area as stub type area
          no_summary:
            type: bool
            description: disable inter-area route injection into the stub
      virtual_links:
        type: list
        elements: dict
        description: configuration for virtual links
        suboptions:
          enabled:
            type: bool
            description: enable virtual link
          router_id:
            type: str
            required: True
            description: router id of the remote ABR
          dead_interval:
            type: int
            description:
              - configure adjacency dead interval
              - value is in seconds
          hello_interval:
            type: int
            description:
              - configure neighbor hello interval
              - value is in seconds
          retransmit_interval:
            type: int
            description:
              - configure LSA retransmit interval
              - value is in seconds
          transmit_delay:
            type: int
            description:
              - configure LSA transmit delay
              - value is in seconds
          authentication:
            type: dict
            description: configure authentication settings for virtual link
            suboptions:
              auth_type:
                type: str
                choices:
                  - message_digest
                  - text
                  - none
                description: authentication type for virtual link
              key:
                type: str
                description: text authentication password for virtual link
              key_encrypted:
                type: bool
                description: password is in encrypted format
          message_digest_keys:
            type: list
            elements: dict
            description: configure message-digest authentication keys
            suboptions:
              key_id:
                type: int
                required: True
                description: message-digest authentication key id
              key:
                type: str
                description: authentication password
              key_encrypted:
                type: bool
                description: password is in encrypted format
  state:
    description:
      - Specifies the type of configuration update to be performed on the device.
    type: str
    choices:
      - merged
      - replaced
      - overridden
      - deleted
    default: merged
"""
EXAMPLES = """"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: list
  sample: >
    The configuration returned will always be in the same format
     as the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: list
  sample: >
    The configuration returned will always be in the same format
     as the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: [{"config": ..., "state": ...}, {"config": ..., "state": ...}]
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.argspec.ospf_area.ospf_area import Ospf_areaArgs
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.config.ospf_area.ospf_area import Ospf_area


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Ospf_areaArgs.argument_spec,
                           supports_check_mode=True)

    result = Ospf_area(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
