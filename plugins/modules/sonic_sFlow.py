#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_sFlow
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community'
}

DOCUMENTATION = """
---
module: sFlow
description: This module provides configuration for sFlow sampling on devices running SONiC 
version_added: "2.10"
short_description: configure sFlow settings on SONiC
author: "Xiao Han @Xiao_Han2"
options:
  config:
    description:
      - Configuration data for sflow.
    type: dict
    suboptions:
      enabled:
        type: bool
        description: Enables or disables sFlow sampling for the device.
      polling_interval:
        type: int
        description: sFlow polling interval
      agent: 
        type: str
        description: sFlow agent interface
      collectors:
        description: Configuration data for sFlow collectors.
        type: list
        elements: dict
        suboptions:
          address:
            type: str
            description: IP address of the sFlow collector.
            required: true
          port:
            type: int
            description: UDP port number for the sFlow collector.
            default: 6343
          network_instance:
            type: str
            description: Reference to the network instance used to reach the sFlow collector
            default: "default"
      interfaces:
        description: Configuration data for sFlow data on interfaces.
        type: list
        elements: dict
        suboptions:
          name:
            type: str
            description: Reference to the interface
          enabled:
            type: bool
            description: If sFlow is globally enabled, enables or disables sFlow on the interface
          sampling_rate:
            type: int
            description: Override the global sampling rate for this interface
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
"""
EXAMPLES = """



"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.argspec.sFlow.sFlow import SflowArgs
from ansible_collections.dellemc.enterprise_sonic.plugins.module_utils.network.sonic.config.sFlow.sFlow import Sflow


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=SflowArgs.argument_spec,
                           supports_check_mode=True)

    result = Sflow(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
