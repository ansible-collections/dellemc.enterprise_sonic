---
idempotnet_condition: "{{ 'Passed' if (idempotent_task_output.failed == false and
                                       idempotent_task_output.commands == empty and
                                       idempotent_task_output.changed == false)
                                   else 'Failed'
                   }}"
action_condition: "{{ 'Passed' if (action_task_output.failed == false and
                                   action_task_output.commands != empty and
                                   action_task_output.changed == true)
                                else 'Failed'
                    }}"
cli_test_condition: "{{ 'Passed' if(cli_tests_output.failed == false and
                                    cli_tests_output.changed == false
                                    )
                                 else 'Failed'
                   }}"

single_run_condition: "{{ 'Passed' if(single_run_task_output.failed == false and
                                        single_run_task_output.commands != empty and
                                        single_run_task_output.changed == true
                                       )
                                 else 'Failed'
                   }}"

single_run_idem_condition: "{{ 'Passed' if (single_run_task_output.failed == false and
                                       single_run_task_output.commands == empty and
                                       single_run_task_output.changed == false)
                                   else 'Failed'
                   }}"

REPORT_DIR: "/var/www/html/ansible/regression"
empty: []

module_name1: debug

std_name: STANDARD
native_name: NATIVE

interface_mode: STANDARD

default_interface_cli_std: default interface range Eth 1/5-1/10
default_interface_cli_native: default interface range Ethernet20-40

default_interface_cli:
     - "{{ default_interface_cli_std if std_name in interface_mode else default_interface_cli_native }}"

native_eth1: Ethernet20
native_eth2: Ethernet24
native_eth3: Ethernet28
native_eth4: Ethernet32
native_eth5: Ethernet36
native_eth6: Ethernet40
native_eth7: Ethernet96
native_eth8: Ethernet100
native_eth9: Ethernet104
native_eth10: Ethernet108
native_eth11: Ethernet112
native_eth12: Ethernet116

std_eth1: Eth1/5
std_eth2: Eth1/6
std_eth3: Eth1/7
std_eth4: Eth1/8
std_eth5: Eth1/9
std_eth6: Eth1/10
std_eth7: Eth1/97
std_eth8: Eth1/98
std_eth9: Eth1/99
std_eth10: Eth1/100
std_eth11: Eth1/101
std_eth12: Eth1/102

interface1: "{{ std_eth1 if std_name in interface_mode else native_eth1 }}"
interface2: "{{ std_eth2 if std_name in interface_mode else native_eth2 }}"
interface3: "{{ std_eth3 if std_name in interface_mode else native_eth3 }}"
interface4: "{{ std_eth4 if std_name in interface_mode else native_eth4 }}"
interface5: "{{ std_eth5 if std_name in interface_mode else native_eth5 }}"
interface6: "{{ std_eth6 if std_name in interface_mode else native_eth6 }}"
interface7: "{{ std_eth7 if std_name in interface_mode else native_eth7 }}"
interface8: "{{ std_eth8 if std_name in interface_mode else native_eth8 }}"
interface9: "{{ std_eth9 if std_name in interface_mode else native_eth9 }}"
interface10: "{{ std_eth10 if std_name in interface_mode else native_eth10 }}"
interface11: "{{ std_eth11 if std_name in interface_mode else native_eth11 }}"
interface12: "{{ std_eth12 if std_name in interface_mode else native_eth12 }}"
